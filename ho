[33mcommit 9ef703d86204ddd907ccbbe54f78fab2716c5bec[m
Author: Rama <berthinram@hotmail.com>
Date:   Wed Jan 2 07:46:29 2019 -0800

    Component Conditional

[1mdiff --git a/ReactJs.txt b/ReactJs.txt[m
[1mindex 10b18b1..dd2186f 100644[m
[1m--- a/ReactJs.txt[m
[1m+++ b/ReactJs.txt[m
[36m@@ -231,4 +231,54 @@[m [mFor exemple[m
 is slightly different in React:[m
 <button onClick={activateLasers}>[m
   Activate Lasers[m
[31m-</button>[m
\ No newline at end of file[m
[32m+[m[32m</button>[m
[32m+[m[32mWhen using component class ES6, a common pattern is for an event handler to be a method on the class.[m
[32m+[m[32mclass Toggle extends React.Component {[m
[32m+[m[32m  constructor(props) {[m
[32m+[m[32m    super(props);[m
[32m+[m[32m    this.state = {isToggleOn: true};[m
[32m+[m[32m    // In JavaScript, class methods are not bound by default. If you forget to bind this.handleClick and pass it to onClick, this will be undefined when the function is actually called.[m
[32m+[m[32m    // This binding is necessary to make `this` work in the callback[m
[32m+[m[32m    this.handleClick = this.handleClick.bind(this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  handleClick() {[m
[32m+[m[32m    this.setState(state => ({[m
[32m+[m[32m      isToggleOn: !state.isToggleOn[m
[32m+[m[32m    }));[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  render() {[m
[32m+[m[32m    return ([m
[32m+[m[32m      <button onClick={this.handleClick}>[m
[32m+[m[32m        {this.state.isToggleOn ? 'ON' : 'OFF'}[m
[32m+[m[32m      </button>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mReactDOM.render([m
[32m+[m[32m  <Toggle />,[m
[32m+[m[32m  document.getElementById('root')[m
[32m+[m[32m);[m
[32m+[m
[32m+[m[32m* If calling bind in contructor annoys you, there is a way you can get around this: by using  public class fields syntax[m
[32m+[m[32mclass LoggingButton extends React.Component {[m
[32m+[m[32m  // This syntax ensures `this` is bound within handleClick.[m
[32m+[m[32m  // Warning: this is *experimental* syntax.[m
[32m+[m[32m  handleClick = () => {[m
[32m+[m[32m    console.log('this is:', this);[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  render() {[m
[32m+[m[32m    return ([m
[32m+[m[32m      <button onClick={this.handleClick}>[m
[32m+[m[32m        Click me[m
[32m+[m[32m      </button>[m
[32m+[m[32m    );[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m* CONDITIONAL RENDERING[m
[32m+[m[32mUser javascript operators like if or the conditional operator.[m
[32m+[m[32mExpression: we will create a stateful compoment, this means a component with this.state defined[m
\ No newline at end of file[m
